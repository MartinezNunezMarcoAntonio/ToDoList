{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useCallback, useState } from 'react';\nimport { Icon, VStack, useColorModeValue, Fab } from 'native-base';\nimport { AntDesign } from '@expo/vector-icons';\nimport AnimatedColorBox from \"../components/animated-color-box\";\nimport TaskList from \"../components/task-list\";\nimport shortid from 'shortid';\nimport Masthead from \"../components/masthead\";\nimport NavBar from \"../components/navbar\";\nvar initialData = [{\n  id: shortid.generate(),\n  subject: 'Comprar boletos para pelicula',\n  done: false\n}, {\n  id: shortid.generate(),\n  subject: 'Make a React Native tutorial',\n  done: false\n}];\nexport default function MainScreen() {\n  var _useState = useState(initialData),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      editingItemId = _useState4[0],\n      setEditingItemId = _useState4[1];\n\n  var handleToggleTaskItem = useCallback(function (item) {\n    setData(function (prevData) {\n      var newData = _toConsumableArray(prevData);\n\n      var index = prevData.indexOf(item);\n      newData[index] = _objectSpread(_objectSpread({}, item), {}, {\n        done: !item.done\n      });\n      return newData;\n    });\n  }, []);\n  var handleChangeTaskItemSubject = useCallback(function (item, newSubject) {\n    setData(function (prevData) {\n      var newData = _toConsumableArray(prevData);\n\n      var index = prevData.indexOf(item);\n      newData[index] = _objectSpread(_objectSpread({}, item), {}, {\n        subject: newSubject\n      });\n      return newData;\n    });\n  }, []);\n  var handleFinishEditingTaskItem = useCallback(function (_item) {\n    setEditingItemId(null);\n  }, []);\n  var handlePressTaskItemLabel = useCallback(function (item) {\n    setEditingItemId(item.id);\n  }, []);\n  var handleRemoveItem = useCallback(function (item) {\n    setData(function (prevData) {\n      var newData = prevData.filter(function (i) {\n        return i !== item;\n      });\n      return newData;\n    });\n  }, []);\n  return React.createElement(AnimatedColorBox, {\n    flex: 1,\n    bg: useColorModeValue('warmGray.50', 'primary.900'),\n    w: \"full\"\n  }, React.createElement(Masthead, {\n    title: \"What's up, Takuya!\",\n    image: require(\"../assets/masthead.png\")\n  }, React.createElement(NavBar, null)), React.createElement(VStack, {\n    flex: 1,\n    space: 1,\n    bg: useColorModeValue('warmGray.50', 'primary.900'),\n    mt: \"-20px\",\n    borderTopLeftRadius: \"20px\",\n    borderTopRightRadius: \"20px\",\n    pt: \"20px\"\n  }, React.createElement(TaskList, {\n    data: data,\n    onToggleItem: handleToggleTaskItem,\n    onChangeSubject: handleChangeTaskItemSubject,\n    onFinishEditing: handleFinishEditingTaskItem,\n    onPressLabel: handlePressTaskItemLabel,\n    onRemoveItem: handleRemoveItem,\n    editingItemId: editingItemId\n  })), React.createElement(Fab, {\n    position: \"absolute\",\n    renderInPortal: false,\n    size: \"sm\",\n    icon: React.createElement(Icon, {\n      color: \"white\",\n      as: React.createElement(AntDesign, {\n        name: \"plus\"\n      }),\n      size: \"sm\"\n    }),\n    colorScheme: useColorModeValue('blue', 'darkBlue'),\n    bg: useColorModeValue('blue.500', 'blue.400'),\n    onPress: function onPress() {\n      var id = shortid.generate();\n      setData([{\n        id: id,\n        subject: '',\n        done: false\n      }].concat(_toConsumableArray(data)));\n      setEditingItemId(id);\n    }\n  }));\n}","map":{"version":3,"sources":["/home/antonio/develop/react/ToDoList/src/screens/main-screen.tsx"],"names":["React","useCallback","useState","Icon","VStack","useColorModeValue","Fab","AntDesign","AnimatedColorBox","TaskList","shortid","Masthead","NavBar","initialData","id","generate","subject","done","MainScreen","data","setData","editingItemId","setEditingItemId","handleToggleTaskItem","item","prevData","newData","index","indexOf","handleChangeTaskItemSubject","newSubject","handleFinishEditingTaskItem","_item","handlePressTaskItemLabel","handleRemoveItem","filter","i","require"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react'\nimport { Icon, VStack, useColorModeValue, Fab } from 'native-base'\nimport { AntDesign } from '@expo/vector-icons'\nimport AnimatedColorBox from '../components/animated-color-box'\nimport TaskList from '../components/task-list'\nimport shortid from 'shortid'\nimport Masthead from '../components/masthead'\nimport NavBar from '../components/navbar'\n\nconst initialData = [\n  {\n    id: shortid.generate(),\n    subject: 'Comprar boletos para pelicula',\n    done: false\n  },\n  {\n    id: shortid.generate(),\n    subject: 'Make a React Native tutorial',\n    done: false\n  }\n]\n\nexport default function MainScreen() {\n  const [data, setData] = useState(initialData)\n  const [editingItemId, setEditingItemId] = useState<string | null>(null)\n\n  const handleToggleTaskItem = useCallback(item => {\n    setData(prevData => {\n      const newData = [...prevData]\n      const index = prevData.indexOf(item)\n      newData[index] = {\n        ...item,\n        done: !item.done\n      }\n      return newData\n    })\n  }, [])\n  const handleChangeTaskItemSubject = useCallback((item, newSubject) => {\n    setData(prevData => {\n      const newData = [...prevData]\n      const index = prevData.indexOf(item)\n      newData[index] = {\n        ...item,\n        subject: newSubject\n      }\n      return newData\n    })\n  }, [])\n  const handleFinishEditingTaskItem = useCallback(_item => {\n    setEditingItemId(null)\n  }, [])\n  const handlePressTaskItemLabel = useCallback(item => {\n    setEditingItemId(item.id)\n  }, [])\n  const handleRemoveItem = useCallback(item => {\n    setData(prevData => {\n      const newData = prevData.filter(i => i !== item)\n      return newData\n    })\n  }, [])\n\n  return (\n    <AnimatedColorBox\n      flex={1}\n      bg={useColorModeValue('warmGray.50', 'primary.900')}\n      w=\"full\"\n    >\n      <Masthead\n        title=\"What's up, Takuya!\"\n        image={require('../assets/masthead.png')}\n      >\n        <NavBar />\n      </Masthead>\n      <VStack\n        flex={1}\n        space={1}\n        bg={useColorModeValue('warmGray.50', 'primary.900')}\n        mt=\"-20px\"\n        borderTopLeftRadius=\"20px\"\n        borderTopRightRadius=\"20px\"\n        pt=\"20px\"\n      >\n        <TaskList\n          data={data}\n          onToggleItem={handleToggleTaskItem}\n          onChangeSubject={handleChangeTaskItemSubject}\n          onFinishEditing={handleFinishEditingTaskItem}\n          onPressLabel={handlePressTaskItemLabel}\n          onRemoveItem={handleRemoveItem}\n          editingItemId={editingItemId}\n        />\n      </VStack>\n      <Fab\n        position=\"absolute\"\n        renderInPortal={false}\n        size=\"sm\"\n        icon={<Icon color=\"white\" as={<AntDesign name=\"plus\" />} size=\"sm\" />}\n        colorScheme={useColorModeValue('blue', 'darkBlue')}\n        bg={useColorModeValue('blue.500', 'blue.400')}\n        onPress={() => {\n          const id = shortid.generate()\n          setData([\n            {\n              id,\n              subject: '',\n              done: false\n            },\n            ...data\n          ])\n          setEditingItemId(id)\n        }}\n      />\n    </AnimatedColorBox>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}